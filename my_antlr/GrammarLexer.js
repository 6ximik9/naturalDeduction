// Generated from Grammar.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,8,71,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,
7,4,2,5,7,5,2,6,7,6,2,7,7,7,1,0,1,0,1,1,1,1,1,2,4,2,23,8,2,11,2,12,2,24,
1,2,4,2,28,8,2,11,2,12,2,29,1,2,3,2,33,8,2,1,3,1,3,1,3,1,3,3,3,39,8,3,1,
4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,49,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
1,5,1,5,3,5,61,8,5,1,6,1,6,1,7,4,7,66,8,7,11,7,12,7,67,1,7,1,7,0,0,8,1,1,
3,2,5,3,7,4,9,5,11,6,13,7,15,8,1,0,5,1,0,65,90,1,0,97,122,3,0,913,937,945,
969,8868,8869,3,0,33,33,126,126,172,172,3,0,9,10,13,13,32,32,85,0,1,1,0,
0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
0,0,0,0,15,1,0,0,0,1,17,1,0,0,0,3,19,1,0,0,0,5,32,1,0,0,0,7,38,1,0,0,0,9,
48,1,0,0,0,11,60,1,0,0,0,13,62,1,0,0,0,15,65,1,0,0,0,17,18,5,40,0,0,18,2,
1,0,0,0,19,20,5,41,0,0,20,4,1,0,0,0,21,23,7,0,0,0,22,21,1,0,0,0,23,24,1,
0,0,0,24,22,1,0,0,0,24,25,1,0,0,0,25,33,1,0,0,0,26,28,7,1,0,0,27,26,1,0,
0,0,28,29,1,0,0,0,29,27,1,0,0,0,29,30,1,0,0,0,30,33,1,0,0,0,31,33,7,2,0,
0,32,22,1,0,0,0,32,27,1,0,0,0,32,31,1,0,0,0,33,6,1,0,0,0,34,39,5,8658,0,
0,35,36,5,45,0,0,36,39,5,62,0,0,37,39,5,8594,0,0,38,34,1,0,0,0,38,35,1,0,
0,0,38,37,1,0,0,0,39,8,1,0,0,0,40,49,5,8744,0,0,41,42,5,79,0,0,42,49,5,82,
0,0,43,44,5,111,0,0,44,49,5,114,0,0,45,49,5,124,0,0,46,47,5,124,0,0,47,49,
5,124,0,0,48,40,1,0,0,0,48,41,1,0,0,0,48,43,1,0,0,0,48,45,1,0,0,0,48,46,
1,0,0,0,49,10,1,0,0,0,50,61,5,8743,0,0,51,52,5,65,0,0,52,53,5,78,0,0,53,
61,5,68,0,0,54,55,5,97,0,0,55,56,5,110,0,0,56,61,5,100,0,0,57,61,5,38,0,
0,58,59,5,38,0,0,59,61,5,38,0,0,60,50,1,0,0,0,60,51,1,0,0,0,60,54,1,0,0,
0,60,57,1,0,0,0,60,58,1,0,0,0,61,12,1,0,0,0,62,63,7,3,0,0,63,14,1,0,0,0,
64,66,7,4,0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,65,1,0,0,0,67,68,1,0,0,0,68,
69,1,0,0,0,69,70,6,7,0,0,70,16,1,0,0,0,8,0,24,29,32,38,48,60,67,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GrammarLexer extends antlr4.Lexer {

    static grammarFileName = "Grammar.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'" ];
	static symbolicNames = [ null, null, null, "LETTER", "IMPL", "DIS", "CON", 
                          "NEG", "WS" ];
	static ruleNames = [ "T__0", "T__1", "LETTER", "IMPL", "DIS", "CON", "NEG", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

GrammarLexer.EOF = antlr4.Token.EOF;
GrammarLexer.T__0 = 1;
GrammarLexer.T__1 = 2;
GrammarLexer.LETTER = 3;
GrammarLexer.IMPL = 4;
GrammarLexer.DIS = 5;
GrammarLexer.CON = 6;
GrammarLexer.NEG = 7;
GrammarLexer.WS = 8;




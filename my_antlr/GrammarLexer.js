// Generated from Grammar.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,10,79,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,1,1,1,1,2,1,2,1,
3,1,3,1,4,4,4,31,8,4,11,4,12,4,32,1,4,4,4,36,8,4,11,4,12,4,37,1,4,3,4,41,
8,4,1,5,1,5,1,5,1,5,3,5,47,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,57,8,
6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,69,8,7,1,8,1,8,1,9,4,9,74,
8,9,11,9,12,9,75,1,9,1,9,0,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,1,0,5,1,0,65,90,1,0,97,122,4,0,913,937,945,969,8866,8866,8868,8869,
3,0,33,33,126,126,172,172,3,0,9,10,13,13,32,32,93,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,3,23,1,0,0,0,5,25,1,0,0,0,7,27,
1,0,0,0,9,40,1,0,0,0,11,46,1,0,0,0,13,56,1,0,0,0,15,68,1,0,0,0,17,70,1,0,
0,0,19,73,1,0,0,0,21,22,5,8866,0,0,22,2,1,0,0,0,23,24,5,44,0,0,24,4,1,0,
0,0,25,26,5,40,0,0,26,6,1,0,0,0,27,28,5,41,0,0,28,8,1,0,0,0,29,31,7,0,0,
0,30,29,1,0,0,0,31,32,1,0,0,0,32,30,1,0,0,0,32,33,1,0,0,0,33,41,1,0,0,0,
34,36,7,1,0,0,35,34,1,0,0,0,36,37,1,0,0,0,37,35,1,0,0,0,37,38,1,0,0,0,38,
41,1,0,0,0,39,41,7,2,0,0,40,30,1,0,0,0,40,35,1,0,0,0,40,39,1,0,0,0,41,10,
1,0,0,0,42,47,5,8658,0,0,43,44,5,45,0,0,44,47,5,62,0,0,45,47,5,8594,0,0,
46,42,1,0,0,0,46,43,1,0,0,0,46,45,1,0,0,0,47,12,1,0,0,0,48,57,5,8744,0,0,
49,50,5,79,0,0,50,57,5,82,0,0,51,52,5,111,0,0,52,57,5,114,0,0,53,57,5,124,
0,0,54,55,5,124,0,0,55,57,5,124,0,0,56,48,1,0,0,0,56,49,1,0,0,0,56,51,1,
0,0,0,56,53,1,0,0,0,56,54,1,0,0,0,57,14,1,0,0,0,58,69,5,8743,0,0,59,60,5,
65,0,0,60,61,5,78,0,0,61,69,5,68,0,0,62,63,5,97,0,0,63,64,5,110,0,0,64,69,
5,100,0,0,65,69,5,38,0,0,66,67,5,38,0,0,67,69,5,38,0,0,68,58,1,0,0,0,68,
59,1,0,0,0,68,62,1,0,0,0,68,65,1,0,0,0,68,66,1,0,0,0,69,16,1,0,0,0,70,71,
7,3,0,0,71,18,1,0,0,0,72,74,7,4,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,
0,0,0,75,76,1,0,0,0,76,77,1,0,0,0,77,78,6,9,0,0,78,20,1,0,0,0,8,0,32,37,
40,46,56,68,75,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GrammarLexer extends antlr4.Lexer {

    static grammarFileName = "Grammar.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'\\u22A2'", "','", "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, "LETTER", "IMPL", 
                          "DIS", "CON", "NEG", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "LETTER", "IMPL", 
                      "DIS", "CON", "NEG", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

GrammarLexer.EOF = antlr4.Token.EOF;
GrammarLexer.T__0 = 1;
GrammarLexer.T__1 = 2;
GrammarLexer.T__2 = 3;
GrammarLexer.T__3 = 4;
GrammarLexer.LETTER = 5;
GrammarLexer.IMPL = 6;
GrammarLexer.DIS = 7;
GrammarLexer.CON = 8;
GrammarLexer.NEG = 9;
GrammarLexer.WS = 10;



